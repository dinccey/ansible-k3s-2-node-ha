- name: update pg_hba.conf
  blockinfile:
    dest: "{{ pg_hba_file }}"
    block:  |
      host {{ k3s_psql_db }} {{ k3s_psql_user }} {{ hostvars[groups['k3s-nodes'][0]].private_ip }}/32 md5
      host {{ k3s_psql_db }} {{ k3s_psql_user }} {{ hostvars[groups['k3s-nodes'][1]].private_ip }}/32 md5
      host {{ k3s_psql_db }} {{ k3s_psql_user }} {{ keepalived_virtual_ip }}/32 md5
      host {{ k3s_psql_db }} {{ k3s_psql_user }} samehost md5 
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR K3s"
  notify: reload postgresql

- name: Install Dependencies (rhel/centos)
  yum:
    name: "python3-psycopg2"
    state: present
  when:
    - ansible_os_family == "RedHat"
    - psql_master == True

- name: Install Dependencies (debian/ubuntu)
  apt: 
    name: "python3-psycopg2"
    state: latest
  when: 
    - ansible_os_family == "Debian"

- name: Install Dependencies (debian/ubuntu)
  apt: 
    name: "acl"
    state: latest
  when: 
    - ansible_os_family == "Debian"

- name: Install Dependencies (debian/ubuntu)
  apt: 
    name: "net-tools"
    state: latest
  when: 
    - ansible_os_family == "Debian"

- name: Create k3s database
  postgresql_db: name={{ k3s_psql_db }} encoding=UTF-8
  become_user: postgres
  become: true
  when:
    - psql_master == True

- name: Create K3s PostgreSQL user
  community.postgresql.postgresql_user:
    login_db: "{{ k3s_psql_db }}"  # Database for connection/grants
    name: "{{ k3s_psql_user }}"
    password: "{{ k3s_psql_password }}"
    priv: ALL  # Use 'priv' (supported now; deprecates to 'privileges' in v4.0.0)
    state: present
  become: true
  become_user: postgres
  vars:
    ansible_postgresql_user: "{{ postgresql_user | default('postgres') }}"  # Optional: Superuser alias
  no_log: true  # Hides password (was falseâ€”insecure)
  when:
    - psql_master == True  # Only on primary

- name: Grant public schema privileges to {{ k3s_psql_user }} in {{ k3s_psql_db }} DB
  community.postgresql.postgresql_query:
    login_db: "{{ k3s_psql_db }}"
    query: |
      GRANT USAGE ON SCHEMA public TO {{ k3s_psql_user }};
      GRANT CREATE ON SCHEMA public TO {{ k3s_psql_user }};
      GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO {{ k3s_psql_user }};
      GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO {{ k3s_psql_user }};
      ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO {{ k3s_psql_user }};
      ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO {{ k3s_psql_user }};
    autocommit: yes  # Ensures no transaction wrapper; optional but good practice
  become: true
  become_user: postgres
  vars:
    ansible_postgresql_user: "{{ postgresql_user | default('postgres') }}"
  when:
    - psql_master == True
  notify: reload postgresql

